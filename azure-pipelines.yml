# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - master
  - releases/*

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: UseNode@1
    inputs:
      version: "12.x"
  - task: CmdLine@2
    inputs:
      script: |
        wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        sudo add-apt-repository universe
        sudo apt-get update
        sudo apt-get install apt-transport-https
        sudo apt-get update
        sudo apt-get install dotnet-sdk-3.1
        cd $(Build.SourcesDirectory)/Danmu
        dotnet remove package Microsoft.VisualStudio.Web.CodeGeneration.Design
        dotnet remove package VueCliMiddleware
        cd clientapp
        npm install
        npm run build

  ##编译Linux版
  ##开启R2R选项
  - task: CmdLine@2
    inputs:
      script: |
        sed -i 's/<PublishReadyToRun>false/<PublishReadyToRun>true/g' $(Build.SourcesDirectory)/Danmu/Danmu.csproj
  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Linux64 -r linux-x64 --self-contained false --output $(Build.ArtifactStagingDirectory)/Danmu64-R2R"
      zipAfterPublish: False

  ##开启程序集链接
  - task: CmdLine@2
    inputs:
      script: |
        sed -i 's/<PublishTrimmed>false/<PublishTrimmed>true/g' $(Build.SourcesDirectory)/Danmu/Danmu.csproj
  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Linux64 -r linux-x64 --self-contained true -p:PublishSingleFile=true --output $(Build.ArtifactStagingDirectory)/Danmu64-R2R-SCD"
      zipAfterPublish: False

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu64-R2R/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/linux64.r2r.tar.xz"
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu64-R2R-SCD/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/linux64.r2r.scd.tar.xz"
      replaceExistingArchive: true

  ##删除R2R标志
  - task: CmdLine@2
    inputs:
      script: |
        sed -i 's/<PublishReadyToRun>true/<PublishReadyToRun>false/g' $(Build.SourcesDirectory)/Danmu/Danmu.csproj
        rm -r ./Danmu/bin

  ##编译SCD版
  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Linux64 -r linux-x64 --self-contained true -p:PublishSingleFile=true --output $(Build.ArtifactStagingDirectory)/Danmu64-SCD"
      zipAfterPublish: False

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Linux32 -r linux-arm --self-contained true -p:PublishSingleFile=true --output $(Build.ArtifactStagingDirectory)/Danmu32-Arm-SCD"
      zipAfterPublish: False

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Win -r win-x64 --self-contained true -p:PublishSingleFile=true --output $(Build.ArtifactStagingDirectory)/Danmu64-Win-SCD"
      zipAfterPublish: False



  ##编译非SCD版
  ##关闭程序集链接
  - task: CmdLine@2
    inputs:
      script: |
        sed -i 's/<PublishTrimmed>true/<PublishTrimmed>false/g' $(Build.SourcesDirectory)/Danmu/Danmu.csproj
  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Linux64 -r linux-x64 --self-contained false --output $(Build.ArtifactStagingDirectory)/Danmu64"
      zipAfterPublish: False

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Linux32 -r linux-arm --self-contained false --output $(Build.ArtifactStagingDirectory)/Danmu32-Arm"
      zipAfterPublish: False  

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "-c Release-Win -r win-x64 --self-contained false --output $(Build.ArtifactStagingDirectory)/Danmu64-Win"
      zipAfterPublish: False


  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu64/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/linux64.tar.xz"
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu64-SCD/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/linux64.scd.tar.xz"
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu32-Arm/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/linux.arm.tar.xz"
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu32-Arm-SCD/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/linux.arm.scd.tar.xz"
      replaceExistingArchive: true


  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu64-Win/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/win64.tar.xz"
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/Danmu64-Win-SCD/Danmu"
      includeRootFolder: true
      archiveType: "tar"
      tarCompression: "xz"
      archiveFile: "$(Build.ArtifactStagingDirectory)/win64.scd.tar.xz"
      replaceExistingArchive: true

  ## 提交
  - task: GithubRelease@0
    displayName: "Edit GitHub Release"
    inputs:
      gitHubConnection: MonoLogueChiToken
      repositoryName: MonoLogueChi/Danmu.Server
      action: create
      tag: $(Build.BuildNumber)
      assets: $(Build.ArtifactStagingDirectory)/*.tar.xz
